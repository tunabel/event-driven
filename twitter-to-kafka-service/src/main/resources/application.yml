twitter-to-kafka-service:
  twitter-keywords:
    - Java
    - Microservices
    - Spring
    - Kafka
    - ElasticSearch
  enable-mock-tweets: true
  mock-min-tweet-length: 5
  mock-max-tweet-length: 15
  mock-sleep-ms: 3000
retry-config:
  initial-interval-ms: 1000
  max-interval-ms: 10000
  multiplier: 2
  max-attempts: 3
  sleep-time-ms: 2000
kafka-config:
  #  broker servers
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  #  settings in docker compose
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  topic-name: twitter-topic
  #  create topic at runtime
  topic-names-to-create:
    - twitter-topic
  num-of-partitions: 3
  replication-factor: 3
kafka-producer-config:
  #  data type Long for key
  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer
  #  data type Avro for value
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  #  fast compression type from google
  compression-type: snappy
  #  wait all brokers to acknowledges (1 = current broker, 0 = no need acks)
  acsk: all
  #  default size of 16kb
  batch-size: 16384
  #  max size = 16*100
  batch-size-boost-factor: 100
  #  wait 5ms for more data to send at once
  linger-ms: 5
  #  timeout for producer to wait for acks
  request-timeout-ms: 60000
  #  retry for acks
  retry-count: 5